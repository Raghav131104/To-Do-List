<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Raghav Kumar's Minimal To-Do List</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Arial', sans-serif;
        }

        body {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background: #f4f7fa;
        }

        .container {
            width: 100%;
            max-width: 500px;
            padding: 20px;
            background: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
            color: #333;
            margin-bottom: 20px;
            font-size: 24px;
        }

        .input-section {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
        }

        #taskInput {
            flex: 1;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            outline: none;
            font-size: 16px;
            transition: border-color 0.3s;
        }

        #taskInput:focus {
            border-color: #6200ea;
        }

        #addTaskBtn {
            padding: 10px 20px;
            background: #6200ea;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background 0.3s;
        }

        #addTaskBtn:hover {
            background: #3700b3;
        }

        #taskList {
            list-style: none;
        }

        .task-item {
            display: flex;
            align-items: center;
            padding: 10px;
            background: #f9f9f9;
            margin-bottom: 10px;
            border-radius: 5px;
            animation: fadeIn 0.3s ease-in;
        }

        .task-item.completed .task-text {
            text-decoration: line-through;
            color: #888;
        }

        .task-text {
            flex: 1;
            font-size: 16px;
            color: #333;
        }

        .task-item input[type="checkbox"] {
            margin-right: 10px;
            cursor: pointer;
        }

        .delete-btn {
            background: none;
            border: none;
            color: #e57373;
            font-size: 18px;
            cursor: pointer;
            transition: color 0.3s;
        }

        .delete-btn:hover {
            color: #d32f2f;
        }

        /* Animations */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .delete-animation {
            animation: slideOut 0.3s ease-out forwards;
        }

        @keyframes slideOut {
            from { opacity: 1; transform: translateX(0); }
            to { opacity: 0; transform: translateX(100px); }
        }

        .footer {
            text-align: center;
            margin-top: 20px;
            font-size: 14px;
            color: #666;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Raghav Kumar's To-Do List</h1>
        <div class="input-section">
            <input type="text" id="taskInput" placeholder="Add a new task..." />
            <button id="addTaskBtn">Add</button>
        </div>
        <ul id="taskList"></ul>
        <div class="footer">Created by Raghav Kumar</div>
    </div>
    <script>
        // Minimal To-Do List JavaScript
        // Created by Raghav Kumar

        // Select DOM elements
        const taskInput = document.getElementById('taskInput');
        const addTaskBtn = document.getElementById('addTaskBtn');
        const taskList = document.getElementById('taskList');

        // Load tasks from localStorage
        let tasks = JSON.parse(localStorage.getItem('tasks')) || [];

        // Render tasks on page load
        renderTasks();

        // Add task event
        addTaskBtn.addEventListener('click', addTask);
        taskInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') addTask();
        });

        function addTask() {
            const taskText = taskInput.value.trim();
            if (!taskText) return;

            const task = {
                id: Date.now(),
                text: taskText,
                completed: false
            };

            tasks.push(task);
            saveTasks();
            renderTasks();
            taskInput.value = '';
        }

        function renderTasks() {
            taskList.innerHTML = '';
            tasks.forEach(task => {
                const li = document.createElement('li');
                li.className = 'task-item';
                if (task.completed) li.classList.add('completed');

                li.innerHTML = `
                    <input type="checkbox" ${task.completed ? 'checked' : ''} onchange="toggleTask(${task.id})">
                    <span class="task-text">${task.text}</span>
                    <button class="delete-btn" onclick="deleteTask(${task.id})">Ã—</button>
                `;

                taskList.appendChild(li);
            });
        }

        function toggleTask(id) {
            tasks = tasks.map(task =>
                task.id === id ? { ...task, completed: !task.completed } : task
            );
            saveTasks();
            renderTasks();
        }

        function deleteTask(id) {
            const taskElement = Array.from(taskList.children).find(
                li => li.querySelector('.delete-btn').getAttribute('onclick') === `deleteTask(${id})`
            );
            
            taskElement.classList.add('delete-animation');
            taskElement.addEventListener('animationend', () => {
                tasks = tasks.filter(task => task.id !== id);
                saveTasks();
                renderTasks();
            }, { once: true });
        }

        function saveTasks() {
            localStorage.setItem('tasks', JSON.stringify(tasks));
        }
    </script>
</body>
</html>